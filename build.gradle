plugins {
    id "com.diffplug.spotless" version "7.0.2" // auto check && formating code
    id 'pmd' // static code style check
}

subprojects {
    apply plugin: "com.diffplug.spotless"
    apply plugin: "pmd"

    spotless {
        // optional: limit format enforcement to just the files changed by this feature branch
        ratchetFrom 'origin/main'

        format 'misc', {
            // define the files to apply `misc` to
            target '*.gradle', '.gitattributes', '.gitignore'

            // define the steps to apply to those files
            trimTrailingWhitespace()
            leadingSpacesToTabs() // or leadingTabsToSpaces. Takes an integer argument if you don't like 4
            endWithNewline()
        }

        java {
            // don't need to set target, it is inferred from java

            // remove unused imports
            removeUnusedImports('cleanthat-javaparser-unnecessaryimport')

            // apply a specific flavor of google-java-format
            googleJavaFormat('1.17.0')
                    .aosp()
                    .reflowLongStrings()
                    .skipJavadocFormatting()

            // fix formatting of type annotations
            formatAnnotations()
        }
    }

    pmd {
        consoleOutput = true
        toolVersion = "7.0.0"
        rulesMinimumPriority = 5

        ruleSets = [
            "category/java/errorprone.xml",
            "category/java/bestpractices.xml",
            "category/java/design.xml",
            "category/java/security.xml"
        ]

        ignoreFailures = false
    }


    // Check for the Java plugin before applying the toolchain
    if (plugins.hasPlugin('java')) {
        toolchain {
            languageVersion = JavaLanguageVersion.of(23)
        }
    }
}
